package ins.practical.pkg10;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.SignatureException;
import java.util.Formatter;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

public class HMAC {
private static final String HMAC_SHA1_ALGORITHM = &quot;HmacSHA1&quot;;

private static String toHexString(byte[] bytes) {
Formatter formatter = new Formatter();

for(byte b : bytes) {
formatter.format(&quot;%02x&quot;, b);
}
return formatter.toString();
}

public static String calculateRFC2104HMAC(String data, String key) throws
SignatureException, NoSuchAlgorithmException, InvalidKeyException {
SecretKeySpec signingKey = new
SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM);
Mac mac = Mac.getInstance(HMAC_SHA1_ALGORITHM);
mac.init(signingKey);
return toHexString(mac.doFinal(data.getBytes()));
}

public static void main(String[] args) throws Exception {
String hmac = calculateRFC2104HMAC(&quot;data&quot;,&quot;key&quot;);
System.out.println(hmac);
assert hmac.equals(&quot;104152c5bfdca07bc633eebd46199f0255c9f49d&quot;);
}
}